using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Net.Mail;

namespace LeapProject_5
{
    class Program
    {
        //public static string SourcePath = @"D:\\Program Files\\IBM\\WebSphere\\AppServer\\profiles\\AppSrv01\\logs\\HDI-Model-AppSvr01";
        public static string SourcePath = @"D:\\LeapProject";
        public static string SourceFile = "SystemOut_sample.txt";
        public static string TargetPath = @"D:\\LeapProject\\LogFile";
        public static string TargetFile = "ErrorLogFile.txt";

        public static string SourceFilePath = System.IO.Path.Combine(SourcePath, SourceFile);
        public static string TargetFilePath = System.IO.Path.Combine(TargetPath, SourceFile);

        public static string ErrorLogFile = System.IO.Path.Combine(TargetPath, TargetFile);

        public static string MailFrom = "Bhaskar11.Dutta@tenethealth.com";
        public static string MailTo = "Gaurav.Chugh@nttdata.com";
        //public static string MailTo = "Chetna11.Gupta@nttdata.com";

        static void Main(string[] args)
        {

            CopyFile();

        }

        public static void CopyFile()
        {

            // To copy a file to another location and 
            // overwrite the destination file if it already exists.
            System.IO.File.Copy(SourceFilePath, TargetFilePath, true);

            //Calling ReadTextFile()
            ReadTextFile(TargetFilePath, ErrorLogFile);
        }

        public static void ReadTextFile(string targetFilePath, string errorLogFile)
        {
            // Read each line of the file into a string array. 
            // Each element of the array is one line of the file.
            List<ListModel> List = new List<ListModel>();

            string[] lines = System.IO.File.ReadAllLines(targetFilePath);
            //Seperating each line
            foreach (var line in lines)
            {
                //removing spaces
                if (line.Trim() != "")
                {
                    ListModel list = new ListModel();
                    list.Line = line;
                    //Date encounter : new line begins
                    if (IsDate(line.Substring(1, 12))) //[01/01/2018] date format 
                    {
                        list.isFirstLine = true;
                        if (line.ToLower().Contains("error"))
                        {
                            list.isException = true;
                            List.Add(list);
                            StreamWriter writer = new StreamWriter(ErrorLogFile, true);
                            DisplayException(List, writer);
                            writer.Close();
                            
                        }
                    }
                }

            }

            SendMail(ErrorLogFile, TargetPath, MailTo, MailFrom);
        }



        public static bool IsDate(Object obj)
        {
            string strDate = obj.ToString();
            try
            {
                DateTime dt = DateTime.Parse(strDate);
                return true;
            }
            catch
            {
                return false;
            }
        }
        public static void DisplayException(List<ListModel> list, StreamWriter writer)
        {
            for (int i = 0; i < list.Count; i++)
            {
                string exceptionMsg = "";

                if (list[i].isException && list[i].isFirstLine)
                {
                    exceptionMsg = list[i].Line;
                }
                writer.WriteLine(exceptionMsg);

            }
        }


        public static void SendMail(string error_LogFile, string targetPath, string mailTo, string mailFrom)
        {

            if (FileExists(error_LogFile) == true)
            {
                string body = File.ReadAllText(error_LogFile);

                MailMessage mail = new MailMessage(mailFrom, mailTo);
                SmtpClient client = new SmtpClient();
                client.Port = 25;
                client.DeliveryMethod = SmtpDeliveryMethod.Network;
                client.UseDefaultCredentials = false;
                client.Host = "smtp.tenethealth.net";
                mail.Subject = "SystemOut LogFile";

                // Set the read file as the body of the message
                mail.Body = body;
                client.Send(mail);
                DeleteDir(targetPath);
            }
            else
            {
                DeleteDir(targetPath);
            }


        }


        public static void DeleteDir(string DirDelete)
        {
            System.IO.DirectoryInfo di = new DirectoryInfo(DirDelete);

                foreach (FileInfo file in di.GetFiles())
                    {
                        file.Delete(); 
                    }
        }

        public static bool FileExists(string path)
        {
            if (File.Exists(path))
                return true;
            return false;
        }

        public class ListModel
        {
            public string Line { get; set; }
            public bool isFirstLine { get; set; }
            public bool isException { get; set; }
        }
    }
}

